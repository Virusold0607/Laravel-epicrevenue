{"version":3,"sources":["CampaignController.js","ContestController.js","InstagramAccountController.js","InstagramPostsController.js","PublisherController.js","ReportConntroller.js","StatsController.js"],"names":[],"mappingsvxzjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"angular.js","sourcesContent":["adminControllers.controller('CampaignListController', ['$scope', '$http', '$routeParams', '$location',\n    function ($scope, $http, $routeParams, $location) {\n        $scope.page = 1;\n\n        $scope.getRecords = function(page, search, search_by, order_by, order){\n            $scope.page = typeof page !== 'undefined' ? page : $scope.page;\n            $scope.search = typeof search !== 'undefined' ? search : '';\n            $scope.search_by = typeof search_by !== 'undefined' ? search_by : 'id';\n            $scope.order = typeof order !== 'undefined' ? order : 'asc';\n            $scope.order_by = typeof order_by !== 'undefined' ? order_by : 'active';\n\n            $http.get('/admin/api/campaigns/?page=' + $scope.page + '&search=' + $scope.search + '&search_by=' + $scope.search_by + '&order_by=' + $scope.order_by + '&order=' + $scope.order)\n                .then(function successCallback(response) {\n                    //console.log('successCallback: ');\n                    //console.log(response);\n                    $scope.campaigns = response.data.data;\n                    $scope.totalItems = response.data.total;\n                    $scope.currentPage = response.data.current_page;\n                    $scope.maxSize = 10;\n                }, function errorCallback(response) {\n                    console.log('errorCallback: ');\n                    console.log(response);\n                    $scope.message = \"Something goes wrong. For more info check console logs.\";\n            });\n\n        };\n\n        $scope.getRecords($scope.page);\n\n        $scope.pageChanged = function() {\n            $scope.page = $scope.currentPage;\n            $scope.getRecords($scope.page, $scope.search, $scope.search_by, $scope.order_by, $scope.order);\n        };\n\n        $scope.searchRecords = function(query, search_by, order_by, order) {\n            $scope.search = typeof query !== 'undefined' ? query : '';\n            $scope.search_by = typeof search_by !== 'undefined' ? search_by : 'id';\n            $scope.order = typeof order !== 'undefined' ? order : 'dsc';\n            $scope.order_by = typeof order_by !== 'undefined' ? order_by : 'id';\n\n            $scope.getRecords($scope.page, $scope.search, $scope.search_by, $scope.order_by, $scope.order);\n        };\n\n\n    }]);\nadminControllers.controller('CampaignDetailController', ['$scope', '$http', '$routeParams',\n    function ($scope, $http, $routeParams) {\n        $scope.contestId = $routeParams.contestId;\n        $http.get('/admin/api/contests/' + $routeParams.contestId).success(function(data) {\n            $scope.contest = data.contest;\n            $scope.reports = data.reports;\n        });\n    }]);\nadminControllers.controller('CampaignCreateController', ['$scope', '$http', '$filter', '$location',\n    function ($scope, $http, $filter, $location) {\n\n        $http.get('/admin/api/campaigns/create')\n            .then(function successCallback(response) {\n                //console.log('successCallback: ');\n                //console.log(response);\n                $scope.campaign_categories = response.data.campaign_categories;\n                $scope.countries = response.data.countries;\n                $scope.networks = response.data.networks;\n            }, function errorCallback(response) {\n                console.log('errorCallback: ');\n                console.log(response);\n                $scope.message = \"Something goes wrong. For more info check console logs.\";\n            });\n\n        $scope.contest = {\n            type: \"top_earner\",\n            start_at: new Date(),\n            end_at: new Date()\n        };\n        $scope.targets =  [\n            { position: 1, name: '', description: '' },\n            { position: 2, name: '', description: '' },\n            { position: 3, name: '', description: '' }\n        ];\n        $scope.addTarget = function(){\n            var position = $scope.rewards.length;\n            $scope.rewards[position] = { position: position + 1, name: '', description: '' };\n        };\n        $scope.removeTarget = function(){\n            $scope.rewards.pop();\n        };\n        $scope.create = function(campaign, targets) {\n            var data = { campaign: campaign, targets: targets };\n\n            $http.post('/admin/api/campaigns',\n                data,\n                { 'Content-Type': 'application/x-www-form-urlencoded' }\n            ).then(function successCallback(response) {\n                    console.log('successCallback: ');\n                    console.log(response);\n                    $scope.message = \"Success\";\n                    //$location.url('campaigns');\n                }, function errorCallback(response) {\n                    console.log('errorCallback: ');\n                    console.log(response);\n                    $scope.message = \"Something goes wrong. For more info check console logs.\";\n                });\n\n        };\n    }]);\nadminControllers.controller('CampaignEditController', ['$scope', '$http', '$routeParams', '$filter','$httpParamSerializerJQLike', '$location',\n    function ($scope, $http, $routeParams, $filter, $httpParamSerializerJQLike, $location) {\n        $scope.contestId = $routeParams.contestId;\n        $http.get('/admin/api/campaigns/' + $routeParams.contestId + '/edit').success(function(data) {\n            data.start_at = new Date(data.start_at);\n            data.end_at = new Date(data.end_at);\n            $scope.contest = data;\n            $scope.rewards = data.rewards;\n        });\n\n        $scope.addReward = function(){\n            var position = $scope.rewards.length;\n            $scope.rewards[position] = { position: position + 1, name: '', description: '' };\n        };\n        $scope.removeReward = function(){\n            $scope.rewards.pop();\n        };\n\n        $scope.update = function(contest, rewards) {\n            var data = { contest: contest, rewards: rewards };\n\n            $http.put('/admin/api/campaigns/' + $routeParams.contestId,\n                data,\n                { 'Content-Type': 'application/x-www-form-urlencoded' }\n            ).then(function successCallback(response) {\n                    //console.log('successCallback: ');\n                    //console.log(response);\n                    $scope.message = 'Success';\n                    $location.path('campaigns/show/' + data.contest.id);\n                    // this callback will be called asynchronously\n                    // when the response is available\n                }, function errorCallback(response) {\n                    console.log('errorCallback: ');\n                    console.log(response);\n                    $scope.message = \"Something goes wrong. For more info check console logs.\";\n                    // called asynchronously if an error occurs\n                    // or server returns response with an error status.\n                });\n        };\n    }]);\n\n\nadminControllers.controller('CampaignGalleryController', ['$scope', 'Upload', '$routeParams', function ($scope, Upload, $routeParams) {\n        // upload later on form submit or something similar\n        $scope.submit = function() {\n            if ($scope.form.files.$valid && $scope.files) {\n                $scope.uploadFiles($scope.files);\n            }\n        };\n\n        // upload on file select or drop\n        // $scope.upload = function (file) {\n        //     Upload.upload({\n        //         url: '/admin/api/campaigns/gallery',\n        //         data: {file: file, 'campaignId': $routeParams.id}\n        //     }).then(function (resp) {\n        //         console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\n        //     }, function (resp) {\n        //         console.log('Error status: ' + resp.status);\n        //     }, function (evt) {\n        //         var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n        //         console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\n        //     });\n        // };\n        // for multiple files:\n        $scope.uploadFiles = function (files) {\n            if (files && files.length) {\n                for (var i = 0; i < files.length; i++) {\n                    Upload.upload({\n                        url: '/admin/api/campaigns/gallery',\n                        method: 'PUT',\n                        data: { file: files[i], 'campaignId': $routeParams.id }\n                    });\n                }\n                // or send them all together for HTML5 browsers:\n                // Upload.upload({..., data: {file: files}, ...})...;\n            }\n        }\n    }]);","adminControllers.controller('ContestListController', ['$scope', '$http', '$routeParams', '$location',\n    function ($scope, $http, $routeParams, $location) {\n        $scope.page = $routeParams.page;\n\n        var getRecords = function () {\n            $http.get('/admin/api/contests/?page=' + $routeParams.page).success(function(data) {\n                $scope.contests = data.data;\n\n                $scope.totalItems = data.total;\n                $scope.currentPage = data.current_page;\n                $scope.maxSize = 10;\n            });\n        };\n\n        getRecords();\n\n        $scope.pageChanged = function() {\n            $location.path('/contests/' + $scope.currentPage);\n        };\n\n        $scope.orderProp = 'id';\n\n        $scope.delete = function(contest) {\n            $http.delete('/admin/api/contests/' + contest.id)\n            .success(function(data) {\n                $scope.message = data;\n                getRecords();\n            });\n        };\n    }]);\nadminControllers.controller('ContestDetailController', ['$scope', '$http', '$routeParams',\n    function ($scope, $http, $routeParams) {\n        $scope.contestId = $routeParams.contestId;\n        $http.get('/admin/api/contests/' + $routeParams.contestId).success(function(data) {\n            $scope.contest = data.contest;\n            $scope.reports = data.reports;\n        });\n    }]);\nadminControllers.controller('ContestCreateController', ['$scope', '$http', '$routeParams', '$filter','$httpParamSerializerJQLike', '$location',\n    function ($scope, $http, $routeParams, $filter, $httpParamSerializerJQLike, $location) {\n        $scope.contestId = $routeParams.contestId;\n        $scope.contest = {\n            type: \"top_earner\",\n            start_at: new Date(),\n            end_at: new Date()\n        };\n        $scope.rewards =  [\n                { position: 1, name: '', description: '' },\n                { position: 2, name: '', description: '' },\n                { position: 3, name: '', description: '' }\n            ];\n        $scope.addReward = function(){\n            var position = $scope.rewards.length;\n            $scope.rewards[position] = { position: position + 1, name: '', description: '' };\n        };\n        $scope.removeReward = function(){\n            $scope.rewards.pop();\n        };\n        $scope.create = function(contest, rewards) {\n            var data = { contest: contest, rewards: rewards };\n\n            $http.post('/admin/api/contests',\n                data,\n                { 'Content-Type': 'application/x-www-form-urlencoded' }\n            ).then(function successCallback(response) {\n                    //console.log('successCallback: ');\n                    //console.log(response);\n                    $scope.message = \"Success\";\n                    $location.url('contests');\n                    // this callback will be called asynchronously\n                    // when the response is available\n                }, function errorCallback(response) {\n                    console.log('errorCallback: ');\n                    console.log(response);\n                    $scope.message = \"Something goes wrong. For more info check console logs.\";\n                    // called asynchronously if an error occurs\n                    // or server returns response with an error status.\n                });\n\n        };\n    }]);\nadminControllers.controller('ContestEditController', ['$scope', '$http', '$routeParams', '$filter','$httpParamSerializerJQLike', '$location',\n    function ($scope, $http, $routeParams, $filter, $httpParamSerializerJQLike, $location) {\n        $scope.contestId = $routeParams.contestId;\n        $http.get('/admin/api/contests/' + $routeParams.contestId + '/edit').success(function(data) {\n            data.start_at = new Date(data.start_at);\n            data.end_at = new Date(data.end_at);\n            $scope.contest = data;\n            $scope.rewards = data.rewards;\n        });\n\n        $scope.addReward = function(){\n            var position = $scope.rewards.length;\n            $scope.rewards[position] = { position: position + 1, name: '', description: '' };\n        };\n        $scope.removeReward = function(){\n            $scope.rewards.pop();\n        };\n\n        $scope.update = function(contest, rewards) {\n            var data = { contest: contest, rewards: rewards };\n\n            $http.put('/admin/api/contests/' + $routeParams.contestId,\n                data,\n                { 'Content-Type': 'application/x-www-form-urlencoded' }\n            ).then(function successCallback(response) {\n                    //console.log('successCallback: ');\n                    //console.log(response);\n                    $scope.message = 'Success';\n                    $location.path('contests/show/' + data.contest.id);\n                    // this callback will be called asynchronously\n                    // when the response is available\n                }, function errorCallback(response) {\n                    console.log('errorCallback: ');\n                    console.log(response);\n                    $scope.message = \"Something goes wrong. For more info check console logs.\";\n                    // called asynchronously if an error occurs\n                    // or server returns response with an error status.\n                });\n        };\n    }]);","adminControllers.controller('InstagramAccountListController', ['$scope', '$http', '$routeParams', '$location', '$httpParamSerializerJQLike',\n    function ($scope, $http, $routeParams, $location, $httpParamSerializerJQLike) {\n        $scope.page = $routeParams.page;\n        $http.get('/admin/api/instagramaccounts/?page=' + $routeParams.page).success(function(data) {\n            $scope.instagramaccounts = data.data;\n\n            $scope.totalItems = data.total;\n            $scope.currentPage = data.current_page;\n            $scope.maxSize = 10;\n\n        });\n\n        $scope.pageChanged = function() {\n            $location.path('/instagramaccounts/' + $scope.currentPage);\n        };\n\n        $scope.orderProp = 'id';\n\n        $scope.approval = function(id, status) {\n            $http({\n                method  : 'POST',\n                url     : '/admin/api/instagramaccounts/approval/' + id,\n                data    : $httpParamSerializerJQLike({ approve: status }),\n                headers : { 'Content-Type': 'application/x-www-form-urlencoded' }  // set the headers so angular passing info as form data (not request payload)\n            })\n                .success(function(data) {\n                    // if successful, bind success message to message\n                    for(var i = 0; i < $scope.instagramaccounts.length; i++) {\n                        if($scope.instagramaccounts[i].instagram_id === id) {\n                            $scope.instagramaccounts[i].approved = status;\n                            return true;\n                        }\n                    }\n                });\n\n        };\n\n    }]);\n\nadminControllers.controller('InstagramAccountDetailController', ['$scope', '$http', '$routeParams', '$httpParamSerializerJQLike',\n    function ($scope, $http, $routeParams, $httpParamSerializerJQLike) {\n        $scope.igId = $routeParams.igId;\n        $http.get('/admin/api/instagramaccounts/' + $routeParams.igId).success(function(data) {\n            $scope.ig = data;\n        });\n\n        $scope.approval = function(status) {\n            $http({\n                method  : 'POST',\n                url     : '/admin/api/instagramaccounts/approval/' + $routeParams.igId,\n                data    : $httpParamSerializerJQLike({ approve: status }),\n                headers : { 'Content-Type': 'application/x-www-form-urlencoded' }  // set the headers so angular passing info as form data (not request payload)\n            })\n                .success(function(data) {\n                    // if successful, bind success message to message\n                    $scope.ig.approved = status;\n                });\n\n        };\n    }]);","adminControllers.controller('InstagramPostsListController', ['$scope', '$http', '$routeParams', '$location', '$httpParamSerializerJQLike',\n    function ($scope, $http, $routeParams, $location, $httpParamSerializerJQLike) {\n        $scope.page = $routeParams.page;\n        $http.get('/admin/api/instagramposts/?page=' + $routeParams.page).success(function(data) {\n            $scope.instagramaccounts = data.data;\n\n            $scope.totalItems = data.total;\n            $scope.currentPage = data.current_page;\n            $scope.maxSize = 10;\n\n        });\n\n        $scope.pageChanged = function() {\n            $location.path('/instagramposts/' + $scope.currentPage);\n        };\n\n        $scope.orderProp = 'id';\n\n    }]);\n\nadminControllers.controller('InstagramPostsDetailController', ['$scope', '$http', '$routeParams', '$httpParamSerializerJQLike',\n    function ($scope, $http, $routeParams, $httpParamSerializerJQLike) {\n        $scope.igId = $routeParams.igId;\n        $http.get('/admin/api/instagramaccounts/' + $routeParams.igId).success(function(data) {\n            $scope.ig = data;\n        });\n    }]);","adminControllers.controller('PublisherListController', ['$scope', '$http', '$routeParams', '$location',\n    function ($scope, $http, $routeParams, $location) {\n        $scope.page = 1;\n\n        $scope.getRecords = function(page, search, search_by, order_by, order){\n            $scope.page = typeof page !== 'undefined' ? page : $scope.page;\n            $scope.search = typeof search !== 'undefined' ? search : '';\n            $scope.search_by = typeof search_by !== 'undefined' ? search_by : 'id';\n            $scope.order = typeof order !== 'undefined' ? order : 'dsc';\n            $scope.order_by = typeof order_by !== 'undefined' ? order_by : 'id';\n\n            if($routeParams.page == 'my'){\n                $scope.my = true;\n            } else {\n                $scope.my = false;\n            }\n            if($routeParams.page == 'status'){\n                $scope.status = true;\n            } else {\n                $scope.status = false;\n            }\n\n            $http.get('/admin/api/publishers/?status=' + $scope.status + '&page=' + $scope.page + '&my=' + $scope.my + '&search=' + $scope.search + '&search_by=' + $scope.search_by + '&order_by=' + $scope.order_by + '&order=' + $scope.order).success(function(data) {\n                $scope.publishers = data.data;\n                $scope.totalItems = data.total;\n                $scope.currentPage = data.current_page;\n                $scope.maxSize = 10;\n            });\n\n        };\n\n        $scope.getRecords($scope.page);\n\n        $scope.pageChanged = function() {\n            $scope.page = $scope.currentPage;\n            $scope.getRecords($scope.page, $scope.search, $scope.search_by, $scope.order_by, $scope.order);\n        };\n\n        $scope.searchRecords = function(query, search_by, order_by, order) {\n            $scope.search = typeof query !== 'undefined' ? query : '';\n            $scope.search_by = typeof search_by !== 'undefined' ? search_by : 'id';\n            $scope.order = typeof order !== 'undefined' ? order : 'dsc';\n            $scope.order_by = typeof order_by !== 'undefined' ? order_by : 'id';\n\n            $scope.getRecords($scope.page, $scope.search, $scope.search_by, $scope.order_by, $scope.order);\n        };\n    }]);\n\nadminControllers.controller('PublisherDetailController', ['$scope', '$http', '$routeParams', '$httpParamSerializerJQLike',\n    function ($scope, $http, $routeParams, $httpParamSerializerJQLike) {\n        $scope.userId = $routeParams.userId;\n        $http.get('/admin/api/publishers/' + $routeParams.userId).success(function(data) {\n            $scope.user = data;\n        });\n\n        $scope.approval = function(status) {\n            $http({\n                method  : 'POST',\n                url     : '/admin/api/publishers/approval/' + $routeParams.userId,\n                data    : $httpParamSerializerJQLike({ approve: status }),\n                headers : { 'Content-Type': 'application/x-www-form-urlencoded' }  // set the headers so angular passing info as form data (not request payload)\n            })\n                .success(function(data) {\n                    // if successful, bind success message to message\n                    $scope.user.user.approved = status;\n                });\n\n        };\n    }]);\nadminControllers.controller('PublisherEditController', ['$scope', '$http', '$routeParams', '$httpParamSerializerJQLike',\n    function ($scope, $http, $routeParams, $httpParamSerializerJQLike) {\n        $scope.userId = $routeParams.userId;\n        $http.get('/admin/api/publishers/' + $routeParams.userId + '/edit').success(function(data) {\n            $scope.user = data;\n        });\n\n        $scope.update = function(user) {\n            $http({\n                method  : 'PUT',\n                url     : '/admin/api/publishers/' + user.user.id,\n                data    : $httpParamSerializerJQLike(user),\n                headers : { 'Content-Type': 'application/x-www-form-urlencoded' }  // set the headers so angular passing info as form data (not request payload)\n            })\n                .success(function(data) {\n                    // if successful, bind success message to message\n                    $scope.message = data;\n                });\n\n        };\n    }]);","adminControllers.controller('ReportListController', ['$scope', '$http', '$routeParams', '$location',\n    function ($scope, $http, $routeParams, $location) {\n        $scope.page = 1;\n\n        $scope.getRecords = function(page, search, search_by, order_by, order){\n            $scope.page = typeof page !== 'undefined' ? page : $scope.page;\n            $scope.search = typeof search !== 'undefined' ? search : '';\n            $scope.search_by = typeof search_by !== 'undefined' ? search_by : 'reports.id';\n            $scope.order = typeof order !== 'undefined' ? order : 'dsc';\n            $scope.order_by = typeof order_by !== 'undefined' ? order_by : 'reports.id';\n\n            $http.get('/admin/api/reports/?page=' + $scope.page + '&search=' + $scope.search + '&search_by=' + $scope.search_by + '&order_by=' + $scope.order_by + '&order=' + $scope.order).success(function(data) {\n                $scope.reports = data.data;\n                $scope.totalItems = data.total;\n                $scope.currentPage = data.current_page;\n                $scope.maxSize = 10;\n                $scope.itemsPerPage = data.per_page;\n            });\n\n        };\n\n        $scope.getRecords($scope.page);\n\n        $scope.pageChanged = function() {\n            $scope.page = $scope.currentPage;\n            $scope.getRecords($scope.page, $scope.search, $scope.search_by, $scope.order_by, $scope.order);\n        };\n\n        $scope.searchRecords = function(query, search_by, order_by, order) {\n            $scope.search = typeof query !== 'undefined' ? query : '';\n            $scope.search_by = typeof search_by !== 'undefined' ? search_by : 'id';\n            $scope.order = typeof order !== 'undefined' ? order : 'dsc';\n            $scope.order_by = typeof order_by !== 'undefined' ? order_by : 'id';\n\n            $scope.getRecords($scope.page, $scope.search, $scope.search_by, $scope.order_by, $scope.order);\n        };\n\n\n        $scope.update = function(id, status) {\n            var data = {status: status};\n\n            $http.put('/admin/api/reports/' + id,\n                data,\n                {'Content-Type': 'application/x-www-form-urlencoded'}\n            ).then(function successCallback(response) {\n                    $scope.message = 'success';\n                    for(var i = 0; i < $scope.reports.length; i++) {\n                        if($scope.reports[i].id === id) {\n                            $scope.reports[i].status = parseInt( response.data );\n                            return true;\n                        }\n                    }\n                }, function errorCallback(response) {\n                    console.log('errorCallback: ');\n                    console.log(response);\n                    $scope.message = \"Something goes wrong. For more info check console logs.\";\n                });\n        };\n\n\n        $scope.destroy = function(id) {\n            $http.delete('/admin/api/reports/' + id).then(function successCallback(response) {\n                if(response.data == 'success') {\n                    for(var i = 0; i < $scope.reports.length; i++) {\n                        if($scope.reports[i].id === id) {\n                            $scope.getRecords($scope.page);\n                            return true;\n                        }\n                    }\n                }\n            }, function errorCallback(response) {\n                console.log('errorCallback: ');\n                console.log(response);\n                $scope.message = \"Something goes wrong. For more info check console logs.\";\n            });\n        };\n\n    }]);\n\nadminControllers.controller('ReportDetailController', ['$scope', '$http', '$routeParams', '$location',\n    function ($scope, $http, $routeParams, $location) {\n        $scope.reportId = $routeParams.reportId;\n        $http.get('/admin/api/reports/' + $routeParams.reportId).success(function(data) {\n            $scope.report = data;\n        });\n\n        $scope.update = function(id, status) {\n            var data = {status: status};\n\n            $http.put('/admin/api/reports/' + id,\n                data,\n                {'Content-Type': 'application/x-www-form-urlencoded'}\n            ).then(function successCallback(response) {\n                    $scope.message = 'success';\n                    $scope.report.status = parseInt( response.data );\n                }, function errorCallback(response) {\n                    console.log('errorCallback: ');\n                    console.log(response);\n                    $scope.message = \"Something goes wrong. For more info check console logs.\";\n                });\n        };\n\n        $scope.destroy = function(id) {\n            $http.delete('/admin/api/reports/' + id).then(function successCallback(response) {\n                if(response.data == 'success') {\n                    $location.url('reports');\n                }\n            }, function errorCallback(response) {\n                console.log('errorCallback: ');\n                console.log(response);\n                $scope.message = \"Something goes wrong. For more info check console logs.\";\n            });\n        };\n    }]);","adminControllers.controller('StatsController', ['$scope', '$http', '$interval', '$routeParams', '$rootScope',\n    function($scope, $http, $interval, $routeParams, $rootScope) {\n\n        $scope.getStats = function() {\n            $http.get('/admin/api/stats').\n                then(function (response) {\n                    // this callback will be called asynchronously\n                    // when the response is available\n                    $scope.stats = response.data;\n                }, function (response) {\n                    // called asynchronously if an error occurs\n                    // or server returns response with an error status.\n                    $scope.stats = response.data;\n                });\n        };\n\n        $scope.getStats(); // Get stats on start of page\n\n        $scope.stop = $interval(operation, 10000);\n\n        // Stop If location is changed\n        var dereg = $rootScope.$on('$locationChangeSuccess', function() {\n            $interval.cancel($scope.stop);\n            dereg();\n        });\n\n        function operation() { $scope.getStats(); }\n\n    }]);"],"sourceRoot":"/source/"}